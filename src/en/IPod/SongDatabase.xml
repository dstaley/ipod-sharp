<Type Name="SongDatabase" FullName="IPod.SongDatabase">
  <TypeSignature Language="C#" Value="public class SongDatabase" />
  <AssemblyInfo>
    <AssemblyName>ipod-sharp</AssemblyName>
    <AssemblyVersion>0.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the database to the device.</summary>
        <remarks>This method must be called for any modifications of the database to be persisted to the device.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Songs">
      <MemberSignature Language="C#" Value="public IPod.Song[] Songs { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>IPod.Song[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents all songs on the iPod.</summary>
        <value>Represents all songs on the iPod.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Playlists">
      <MemberSignature Language="C#" Value="public IPod.Playlist[] Playlists { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>IPod.Playlist[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains the list of playlists on the iPod.</summary>
        <value>Contains the list of playlists on the iPod.</value>
        <remarks>The On-The-Go and Podcast playlists are not included in this list.  Those playlists are available through the <see cref="T:IPod.SongDatabase.OnTheGoPlaylist" /> and <see cref="T:IPod.SongDatabase.PodcastPlaylist" /> properties, respectively.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSong">
      <MemberSignature Language="C#" Value="public void RemoveSong (IPod.Song song);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="song" Type="IPod.Song" />
      </Parameters>
      <Docs>
        <param name="song">the song to remove</param>
        <summary>Removes a song from the database</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateSong">
      <MemberSignature Language="C#" Value="public IPod.Song CreateSong ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IPod.Song</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new song in the database.</summary>
        <returns>The new blank song</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreatePlaylist">
      <MemberSignature Language="C#" Value="public IPod.Playlist CreatePlaylist (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IPod.Playlist</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">name for the playlist</param>
        <summary>Creates a new playlist in the database with the specified name.</summary>
        <returns>The new playlist</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemovePlaylist">
      <MemberSignature Language="C#" Value="public void RemovePlaylist (IPod.Playlist playlist);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playlist" Type="IPod.Playlist" />
      </Parameters>
      <Docs>
        <param name="playlist">the playlist to remove</param>
        <summary>Remove a playlist from the database.</summary>
        <remarks />
      </Docs>
    </Member>
    
    <Member MemberName="SaveStarted">
      <MemberSignature Language="C#" Value="public event EventHandler SaveStarted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fired when a save operation has been started</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveProgressChanged">
      <MemberSignature Language="C#" Value="public event IPod.SaveProgressHandler SaveProgressChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>IPod.SaveProgressHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fired when the progress of a save operation has changed</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveEnded">
      <MemberSignature Language="C#" Value="public event EventHandler SaveEnded;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Fired when a save operation has ended.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reload the database from the device.</summary>
        <remarks>Any modifications made to the current database are cleared when this method is called.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTheGoPlaylist">
      <MemberSignature Language="C#" Value="public IPod.Playlist OnTheGoPlaylist { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>IPod.Playlist</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the "On-The-Go" playlists on the iPod.</summary>
        <value>Represents the "On-The-Go" playlists on the iPod.</value>
        <remarks>This playlist cannot be modified.  Attempts to add/remove songs to this playlist, or remove the playlist will result in a <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPlaylist">
      <MemberSignature Language="C#" Value="public IPod.Playlist LookupPlaylist (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>IPod.Playlist</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">name of the playlist to find</param>
        <summary>Finds a playlist with the specified name.</summary>
        <returns>The playlist if found, null otherwise.</returns>
        <remarks>In the case of multiple playlists with the same name, this method will obviously return only the first one found that matches the given name.</remarks>
      </Docs>
    </Member>
    
  <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="PlaylistAdded">
      <MemberSignature Language="C#" Value="public event IPod.PlaylistHandler PlaylistAdded;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>IPod.PlaylistHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="PlaylistRemoved">
      <MemberSignature Language="C#" Value="public event IPod.PlaylistHandler PlaylistRemoved;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>IPod.PlaylistHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  <Member MemberName="Reloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Reloaded;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>Represents the database of songs and playlists on an iPod device</summary>
    <remarks>This is the primary class used for manipulating the contents of the device's song database.  Usage is fairly straightforward.  The example below adds a song to all devices found on the machine:

<para /><example>
        <code lang="C#">
foreach (Device device in Device.ListDevices ())
{
	SongDatabase db = device.SongDatabase;

	Song song = db.CreateSong ();
	song.Artist = "My Artist";
	song.Album = "My Album";
	song.Title = "My Title";
	song.Filename = "/tmp/foo.mp3";

	db.Save ();
}
  </code>
      </example></remarks>
  </Docs>
</Type>
